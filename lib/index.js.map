{"version":3,"sources":["../src/index.js"],"names":["BbPromise","require","path","LayersService","BucketService","CloudFormationService","ZipService","Dependencies","ServerlessLayers","serverless","options","cacheObject","provider","getProvider","service","region","getRegion","log","bind","main","version","getVersion","replace","process","exit","hooks","then","init","finalizeDeploy","settings","getSettings","zipService","dependencies","layersService","bucketService","cloudFormationService","localpackageJson","join","cwd","packagePath","localPackage","e","inboundSettings","custom","defaultSettings","compileDir","compatibleRuntimes","layersDeploymentBucket","deploymentBucket","Object","assign","downloadPackageJson","remotePackage","isDifferent","isDiff","getLayerArn","currentLayerARN","relateLayerWithFunctions","install","uploadZipFile","publishVersion","uploadPackageJson","LayerVersionArn","stage","Error","getStackName","serviceStage","deploymentPrefix","getDeploymentPrefix","getOutputs","outputs","logicalId","getOutputLogicalId","find","x","OutputKey","OutputValue","naming","getLambdaLayerOutputLogicalId","layerArn","functions","keys","forEach","funcName","layers","push","resources","Outputs","outputName","Value","Export","Name","depsA","depsB","depsKeyA","depsKeyB","isSizeEqual","length","hasDifference","dependence","map","msg","cli","module","exports"],"mappings":"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","sourcesContent":["const BbPromise = require('bluebird');\nconst path = require('path');\n\nconst LayersService = require('./aws/LayersService');\nconst BucketService = require('./aws/BucketService');\nconst CloudFormationService = require('./aws/CloudFormationService');\nconst ZipService = require('./package/ZipService');\nconst Dependencies = require('./package/Dependencies');\n\nclass ServerlessLayers {\n  constructor(serverless, options) {\n    this.cacheObject = {};\n    this.options = options;\n    this.serverless = serverless;\n\n    this.provider = serverless.getProvider('aws');\n    this.service = serverless.service;\n    this.options.region = this.provider.getRegion();\n\n    // bindings\n    this.log = this.log.bind(this);\n    this.main = this.main.bind(this);\n\n    const version = serverless.getVersion().replace(/\\./g, '');\n\n    if (version < 1340) {\n      this.log(`Error: Please install serverless >= 1.34.0 (current ${serverless.getVersion()})`)\n      process.exit(1);\n    }\n\n    // hooks\n    this.hooks = {\n      'before:package:initialize': () => BbPromise.bind(this)\n        .then(() => this.init()),\n      'package:initialize': () => BbPromise.bind(this)\n        .then(() => this.main()),\n      'aws:info:displayLayers': () => BbPromise.bind(this)\n        .then(() => this.finalizeDeploy())\n    };\n  }\n\n  async init() {\n    this.settings = this.getSettings();\n\n    this.zipService = new ZipService(this);\n    this.dependencies = new Dependencies(this);\n    this.layersService = new LayersService(this);\n    this.bucketService = new BucketService(this);\n    this.cloudFormationService = new CloudFormationService(this);\n\n    const localpackageJson = path.join(\n      process.cwd(),\n      this.settings.packagePath\n    );\n\n    try {\n      this.localPackage = require(localpackageJson);\n    } catch (e) {\n      this.log(`Error: Can not find ${localpackageJson}!`);\n      process.exit(1);\n    }\n  }\n\n  getSettings() {\n    const inboundSettings = (this.serverless.service.custom || {})[\n      'serverless-layers'\n    ];\n    const defaultSettings = {\n      compileDir: '.serverless',\n      packagePath: 'package.json',\n      compatibleRuntimes: ['nodejs'],\n      layersDeploymentBucket: this.service.provider.deploymentBucket\n    };\n    return Object.assign({}, defaultSettings, inboundSettings);\n  }\n\n  async main() {\n    const remotePackage = await this.bucketService.downloadPackageJson();\n\n    let isDifferent = true;\n    if (remotePackage) {\n      this.log('Comparing package.json dependencies...');\n      isDifferent = await this.isDiff(remotePackage.dependencies, this.localPackage.dependencies);\n    }\n\n    const currentLayerARN = await this.getLayerArn();\n\n    if (!isDifferent && currentLayerARN) {\n      this.log(`Not has changed! Using same layer arn: ${currentLayerARN}`);\n      this.relateLayerWithFunctions(currentLayerARN);\n      return;\n    }\n\n    await this.dependencies.install()\n    await this.zipService.package();\n    await this.bucketService.uploadZipFile();\n    const version = await this.layersService.publishVersion();\n    await this.bucketService.uploadPackageJson();\n\n    this.relateLayerWithFunctions(version.LayerVersionArn);\n  }\n\n  getStackName() {\n    return `${this.serverless.service.service}-${this.options.stage}`;\n  }\n\n  getBucketName() {\n    if (!this.settings.layersDeploymentBucket) {\n      throw new Error(\n        'Please, you should specify \"deploymentBucket\" or \"layersDeploymentBucket\" option for this plugin!\\n'\n      );\n    }\n    return this.settings.layersDeploymentBucket;\n  }\n\n  getPathZipFileName() {\n    return `${path.join(process.cwd(), this.settings.compileDir, this.getStackName())}.zip`;\n  }\n\n  getBucketLayersPath() {\n    const serviceStage = `${this.serverless.service.service}/${this.options.stage}`;\n\n    let deploymentPrefix = 'serverless';\n    if (this.provider.getDeploymentPrefix) {\n      deploymentPrefix = this.provider.getDeploymentPrefix();\n    }\n\n    return path.join(\n      deploymentPrefix,\n      serviceStage,\n      'layers'\n    );\n  }\n\n  async getLayerArn() {\n    if (this.cacheObject.LayerVersionArn) {\n      return this.cacheObject.LayerVersionArn;\n    }\n    const outputs = await this.cloudFormationService.getOutputs();\n    if (!outputs) return null;\n    const logicalId = this.getOutputLogicalId();\n    return (outputs.find(x => x.OutputKey === logicalId) || {}).OutputValue;\n  }\n\n  getOutputLogicalId() {\n    return this.provider.naming.getLambdaLayerOutputLogicalId(this.getStackName());\n  }\n\n  relateLayerWithFunctions(layerArn) {\n    this.log('Associating layers...');\n\n    const { functions } = this.service;\n\n    Object.keys(functions).forEach(funcName => {\n      functions[funcName].layers = functions[funcName].layers || [];\n      functions[funcName].layers.push(layerArn);\n      this.log(`function.${funcName} - ${layerArn}`);\n    });\n\n    this.service.resources = this.service.resources || {};\n    this.service.resources.Outputs = this.service.resources.Outputs || {};\n\n    const outputName = this.getOutputLogicalId();\n\n    Object.assign(this.service.resources.Outputs, {\n      [outputName]: {\n        Value: layerArn,\n        Export: {\n          Name: outputName\n        }\n      }\n    });\n  }\n\n  isDiff(depsA, depsB) {\n    const depsKeyA = Object.keys(depsA);\n    const depsKeyB = Object.keys(depsB);\n    const isSizeEqual = depsKeyA.length === depsKeyB.length;\n\n    if (!isSizeEqual) return true;\n\n    let hasDifference = false;\n    Object.keys(depsA).forEach(dependence => {\n      if (depsA[dependence] !== depsB[dependence]) {\n        hasDifference = true;\n      }\n    });\n\n    return hasDifference;\n  }\n\n  getDependenciesList() {\n    return Object.keys((this.localPackage.dependencies||[])).map(x => (\n      `${x}@${this.localPackage.dependencies[x]}`\n    ));\n  }\n\n  async finalizeDeploy() {\n    const currentLayerARN = await this.getLayerArn();\n    Object.keys(this.service.functions).forEach(funcName => {\n      this.log(`function.${funcName} = layers.${currentLayerARN}`);\n    });\n  }\n\n  log(msg) {\n    this.serverless.cli.log(`[LayersPlugin]: ${msg}`);\n  }\n}\n\nmodule.exports = ServerlessLayers;\n"],"file":"index.js"}