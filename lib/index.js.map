{"version":3,"sources":["../src/index.js"],"names":["BbPromise","require","path","slugify","chalk","Runtimes","LayersService","BucketService","CloudFormationService","ZipService","Dependencies","ServerlessLayers","serverless","options","cacheObject","initialized","hooks","bind","then","init","deployLayers","finalizeDeploy","cleanUpAllLayers","provider","getProvider","service","region","getRegion","log","main","version","getVersion","replace","process","exit","runtimes","settings","getSettings","cliOpts","layerName","currentSettings","enabledFuncs","functions","deploySingle","indexOf","logGroup","initServices","arn","warn","cleanUpLayers","currentLayerName","zipService","dependencies","layersService","bucketService","cloudFormationService","inboundSetting","compileDir","customInstallationCommand","layersDeploymentBucket","deploymentBucket","getDefaultSettings","inboundSettings","custom","Array","isArray","forEach","Object","keys","mergeCommonSettings","relateLayerWithFunctions","hasDependencesChanged","isDifferent","mergePackageOptions","getLayerArn","currentLayerARN","install","uploadZipFile","publishVersion","uploadDependencesFile","LayerVersionArn","stackName","getStackName","runtimeDir","lower","replacement","naming","Error","join","cwd","serviceStage","stage","deploymentPrefix","getDeploymentPrefix","layersArn","getOutputs","outputs","logicalId","getOutputLogicalId","find","x","OutputKey","OutputValue","value","getLayerName","getLambdaLayerOutputLogicalId","packageExclude","pkg","opts","individually","excludeDevDependencies","exclude","excludeFile","hasRule","push","layerArn","funcs","funcName","isEnabled","layers","from","Set","bold","resources","Outputs","outputName","assign","Value","Export","Name","localPackage","map","lambdaFunc","length","console","msg","signal","greenBright","white","cli","magenta","yellowBright","red","module","exports"],"mappings":"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","sourcesContent":["const BbPromise = require('bluebird');\nconst path = require('path');\nconst slugify = require('slugify');\nconst chalk = require('chalk');\nconst Runtimes = require('./runtimes');\nconst LayersService = require('./aws/LayersService');\nconst BucketService = require('./aws/BucketService');\nconst CloudFormationService = require('./aws/CloudFormationService');\nconst ZipService = require('./package/ZipService');\nconst Dependencies = require('./package/Dependencies');\n\nclass ServerlessLayers {\n  constructor(serverless, options) {\n    this.cacheObject = {};\n    this.options = options;\n    this.serverless = serverless;\n    this.initialized = false;\n\n    // hooks\n    this.hooks = {\n      'before:package:function:package': () => BbPromise.bind(this)\n        .then(() => {\n          return this.init()\n            .then(() => this.deployLayers())\n        }),\n      'before:package:initialize': () => BbPromise.bind(this)\n        .then(() => {\n          return this.init()\n            .then(() => this.deployLayers())\n        }),\n      'aws:info:displayLayers': () => BbPromise.bind(this)\n        .then(() => this.init())\n        .then(() => this.finalizeDeploy()),\n      'after:deploy:function:deploy': () => BbPromise.bind(this)\n        .then(() => this.init())\n        .then(() => this.finalizeDeploy()),\n      'plugin:uninstall:uninstall': () => BbPromise.bind(this)\n        .then(() => {\n          return this.init()\n            .then(() => this.cleanUpAllLayers())\n        }),\n      'remove:remove': () => BbPromise.bind(this)\n        .then(() => {\n          return this.init()\n            .then(() => this.cleanUpAllLayers())\n        })\n    };\n  }\n\n  async init() {\n    if (this.initialized) {\n      return;\n    }\n\n    this.provider = this.serverless.getProvider('aws');\n    this.service = this.serverless.service;\n    this.options.region = this.provider.getRegion();\n\n    // bindings\n    this.log = this.log.bind(this);\n    this.main = this.main.bind(this);\n\n    const version = this.serverless.getVersion().replace(/\\./g, '');\n\n    if (version < 1340) {\n      this.log(`Error: Please install serverless >= 1.34.0 (current ${this.serverless.getVersion()})`)\n      process.exit(1);\n    }\n  }\n\n  async deployLayers() {\n    this.runtimes = new Runtimes(this);\n    const settings = this.getSettings();\n    const cliOpts = this.provider.options;\n\n    for (const layerName in settings) {\n      const currentSettings = settings[layerName];\n      const enabledFuncs = currentSettings.functions;\n\n      // deploying a single function\n      const deploySingle = !!(cliOpts.function && enabledFuncs);\n\n      // skip layers that is not related with specified function\n      if (deploySingle && enabledFuncs.indexOf(cliOpts.function) === -1) {\n        continue;\n      }\n\n      this.logGroup(layerName);\n      await this.initServices(layerName, currentSettings);\n      await this.main();\n    }\n  }\n\n  async cleanUpAllLayers() {\n    this.runtimes = new Runtimes(this);\n    const settings = this.getSettings();\n    for (const layerName in settings) {\n      const currentSettings = settings[layerName];\n      this.logGroup(layerName);\n\n      if (currentSettings.arn) {\n        this.warn(` (skipped) arn: ${currentSettings.arn}`);\n        continue;\n      }\n\n      await this.initServices(layerName, currentSettings);\n      await this.cleanUpLayers();\n    }\n  }\n\n  async initServices(layerName, settings) {\n    this.currentLayerName = layerName;\n    this.settings = settings;\n    this.zipService = new ZipService(this);\n    this.dependencies = new Dependencies(this);\n    this.layersService = new LayersService(this);\n    this.bucketService = new BucketService(this);\n    this.cloudFormationService = new CloudFormationService(this);\n    this.initialized = true;\n  }\n\n  mergeCommonSettings(inboundSetting) {\n    return {\n      functions: null,\n      compileDir: '.serverless',\n      customInstallationCommand: null,\n      layersDeploymentBucket: this.service.provider.deploymentBucket,\n      ...this.runtimes.getDefaultSettings(inboundSetting)\n    };\n  }\n\n  getSettings() {\n    const inboundSettings = (this.serverless.service.custom || {})[\n      'serverless-layers'\n    ];\n\n    if (Array.isArray(inboundSettings)) {\n      const settings = {};\n      inboundSettings.forEach(inboundSetting => {\n        const layerName = Object.keys(inboundSetting)[0];\n        settings[layerName] = this.mergeCommonSettings(inboundSetting[layerName]);\n      });\n      return settings;\n    }\n\n    return {\n      default: this.mergeCommonSettings(inboundSettings)\n    }\n  }\n\n  async main() {\n    // static ARN\n    if (this.settings.arn) {\n      this.relateLayerWithFunctions(this.settings.arn);\n      return;\n    }\n\n    await this.runtimes.init();\n    await this.dependencies.init();\n\n    const isDifferent = await this.runtimes.hasDependencesChanged();\n\n    // merge package default options\n    this.mergePackageOptions();\n\n    const currentLayerARN = await this.getLayerArn();\n    if (!isDifferent && currentLayerARN) {\n     this.log(`Not has changed! Using same layer arn: ${currentLayerARN}`);\n     this.relateLayerWithFunctions(currentLayerARN);\n     return;\n    }\n\n    await this.dependencies.install();\n    await this.zipService.package();\n    await this.bucketService.uploadZipFile();\n    const version = await this.layersService.publishVersion();\n    await this.bucketService.uploadDependencesFile();\n\n    this.relateLayerWithFunctions(version.LayerVersionArn);\n  }\n\n  getLayerName() {\n    const stackName = this.getStackName();\n    const { runtimeDir } = this.settings;\n    return slugify(`${stackName}-${runtimeDir}-${this.currentLayerName}`, {\n      lower: true,\n      replacement: '-'\n    });\n  }\n\n  getStackName() {\n    return this.provider.naming.getStackName();\n  }\n\n  getBucketName() {\n    if (!this.settings.layersDeploymentBucket) {\n      throw new Error(\n        'Please, you should specify \"deploymentBucket\" or \"layersDeploymentBucket\" option for this plugin!\\n'\n      );\n    }\n    return this.settings.layersDeploymentBucket;\n  }\n\n  getPathZipFileName() {\n    return `${path.join(process.cwd(), this.settings.compileDir, this.getStackName())}.zip`;\n  }\n\n  getBucketLayersPath() {\n    const serviceStage = `${this.serverless.service.service}/${this.options.stage}`;\n\n    let deploymentPrefix = 'serverless';\n    if (this.provider.getDeploymentPrefix) {\n      deploymentPrefix = this.provider.getDeploymentPrefix();\n    }\n\n    return path.join(\n      deploymentPrefix,\n      serviceStage,\n      'layers'\n    ).replace(/\\\\/g, '/');\n  }\n\n  async getLayerArn() {\n    if (!this.cacheObject.layersArn) {\n      this.cacheObject.layersArn = {};\n    }\n\n    // returns cached arn\n    if (this.cacheObject.layersArn[this.currentLayerName]) {\n      return this.cacheObject.layersArn[this.currentLayerName];\n    }\n\n    const outputs = await this.cloudFormationService.getOutputs();\n    \n\n    if (!outputs) return null;\n\n    const logicalId = this.getOutputLogicalId();\n\n    const arn = (outputs.find(x => x.OutputKey === logicalId) || {}).OutputValue;\n\n    // cache arn\n    this.cacheObject.layersArn[this.currentLayerName] = arn;\n  \n    return arn;\n  }\n\n  getOutputLogicalId() {\n    const value = this.getLayerName().replace(this.getStackName() + '-', '');\n    return this.provider.naming.getLambdaLayerOutputLogicalId(value);\n  }\n\n  mergePackageOptions() {\n    const { packageExclude } = this.settings;\n    const pkg = this.service.package;\n\n    const opts = {\n      individually: false,\n      excludeDevDependencies: false,\n      exclude: []\n    };\n\n    this.service.package = {...opts, ...pkg};\n\n    for (const excludeFile of packageExclude) {\n      const hasRule = (this.service.package.exclude || '').indexOf(excludeFile);\n      if (hasRule === -1) {\n        this.service.package.exclude.push(excludeFile);\n      }\n    }\n  }\n\n  relateLayerWithFunctions(layerArn) {\n    this.log('Associating layers...');\n    const { functions } = this.service;\n    const funcs = this.settings.functions;\n    const cliOpts = this.provider.options;\n\n    Object.keys(functions).forEach(funcName => {\n      if (cliOpts.function && cliOpts.function !== funcName) {\n        return;\n      }\n\n      let isEnabled = !funcs;\n\n      if (Array.isArray(funcs) && funcs.indexOf(funcName) !== -1) {\n        isEnabled = true;\n      }\n\n      if (isEnabled) {\n        functions[funcName].layers = functions[funcName].layers || [];\n        functions[funcName].layers.push(layerArn);\n        functions[funcName].layers = Array.from(new Set(functions[funcName].layers));\n        this.log(`function.${funcName} - ${chalk.bold(layerArn)}`, ' ✓');\n      } else {\n        this.warn(`(Skipped) function.${funcName}`, ` x`);\n      }\n    });\n\n    this.service.resources = this.service.resources || {};\n    this.service.resources.Outputs = this.service.resources.Outputs || {};\n\n    const outputName = this.getOutputLogicalId();\n\n    Object.assign(this.service.resources.Outputs, {\n      [outputName]: {\n        Value: layerArn,\n        Export: {\n          Name: outputName\n        }\n      }\n    });\n  }\n\n  getDependenciesList() {\n    return Object.keys((this.localPackage.dependencies||[])).map(x => (\n      `${x}@${this.localPackage.dependencies[x]}`\n    ));\n  }\n\n  async finalizeDeploy() {\n    const cliOpts = this.provider.options;\n    this.logGroup(\"Layers Info\");\n    Object.keys(this.service.functions).forEach(funcName => {\n      const lambdaFunc = this.service.functions[funcName];\n      const layers = lambdaFunc.layers || [];\n\n      if (!cliOpts.function && layers.length === 0) {\n        this.warn(`(skipped) function.${funcName}`);\n        return;\n      }\n      \n      layers.forEach((currentLayerARN) => {\n        if (cliOpts.function && cliOpts.function === funcName) {\n          this.log(`function.${funcName} = layers.${chalk.bold(currentLayerARN)}`);\n          return;\n        }\n        this.log(`function.${funcName} = layers.${chalk.bold(currentLayerARN)}`);\n      });\n    });\n    console.log('\\n');\n  }\n\n  log(msg, signal=' ○') {\n    console.log('...' + `${chalk.greenBright.bold(signal)} ${chalk.white(msg)}`);\n  }\n\n  logGroup(msg) {\n    console.log('\\n');\n    this.serverless.cli.log(`[ LayersPlugin ]: ${chalk.magenta.bold('=>')} ${chalk.greenBright.bold(msg)}`);\n  }\n\n  warn(msg, signal=' ∅') {\n    console.log('...' + chalk.yellowBright(`${chalk.yellowBright.bold(signal)} ${msg}`));\n  }\n\n  error(msg, signal=' ⊗') {\n    console.log('...' + chalk.red(`${signal} ${chalk.white.bold(msg)}`));\n  }\n\n  cleanUpLayers() {\n    return this.layersService.cleanUpLayers();\n  }\n}\n\nmodule.exports = ServerlessLayers;\n"],"file":"index.js"}