{"version":3,"sources":["../src/index.js"],"names":["BbPromise","require","path","LayersService","BucketService","CloudFormationService","ZipService","Dependencies","ServerlessLayers","serverless","options","cacheObject","initialized","hooks","bind","then","init","main","finalizeDeploy","cleanUpLayers","provider","getProvider","service","region","getRegion","log","version","getVersion","replace","process","exit","settings","getSettings","zipService","dependencies","layersService","bucketService","cloudFormationService","localpackageJson","join","cwd","packagePath","localPackage","e","inboundSettings","custom","defaultSettings","packageManager","compileDir","compatibleRuntimes","customInstallationCommand","layersDeploymentBucket","deploymentBucket","downloadPackageJson","remotePackage","isDifferent","isDiff","mergePackageOptions","getLayerArn","currentLayerARN","relateLayerWithFunctions","install","uploadZipFile","publishVersion","uploadPackageJson","LayerVersionArn","naming","getStackName","Error","serviceStage","stage","deploymentPrefix","getDeploymentPrefix","getOutputs","outputs","logicalId","getOutputLogicalId","find","x","OutputKey","OutputValue","getLambdaLayerOutputLogicalId","pkg","opts","individually","excludeDevDependencies","exclude","hasRule","indexOf","push","layerArn","functions","Object","keys","forEach","funcName","layers","resources","Outputs","outputName","assign","Value","Export","Name","depsA","depsB","depsKeyA","depsKeyB","isSizeEqual","length","hasDifference","dependence","map","msg","cli","module","exports"],"mappings":"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","sourcesContent":["const BbPromise = require('bluebird');\nconst path = require('path');\n\nconst LayersService = require('./aws/LayersService');\nconst BucketService = require('./aws/BucketService');\nconst CloudFormationService = require('./aws/CloudFormationService');\nconst ZipService = require('./package/ZipService');\nconst Dependencies = require('./package/Dependencies');\n\nclass ServerlessLayers {\n  constructor(serverless, options) {\n    this.cacheObject = {};\n    this.options = options;\n    this.serverless = serverless;\n    this.initialized = false;\n\n    // hooks\n    this.hooks = {\n      'before:package:initialize': () => BbPromise.bind(this)\n        .then(() => this.init()),\n      'package:initialize': () => BbPromise.bind(this)\n        .then(() => this.main()),\n      'aws:info:displayLayers': () => BbPromise.bind(this)\n        .then(() => this.init())\n        .then(() => this.finalizeDeploy()),\n      'plugin:uninstall:uninstall': () => BbPromise.bind(this)\n        .then(() => this.init())\n        .then(() => this.cleanUpLayers()),\n      'remove:remove': () => BbPromise.bind(this)\n        .then(() => this.init())\n        .then(() => this.cleanUpLayers()),\n    };\n  }\n\n  async init() {\n    if (this.initialized) {\n      return;\n    }\n\n    this.provider = this.serverless.getProvider('aws');\n    this.service = this.serverless.service;\n    this.options.region = this.provider.getRegion();\n\n    // bindings\n    this.log = this.log.bind(this);\n    this.main = this.main.bind(this);\n\n    const version = this.serverless.getVersion().replace(/\\./g, '');\n\n    if (version < 1340) {\n      this.log(`Error: Please install serverless >= 1.34.0 (current ${this.serverless.getVersion()})`)\n      process.exit(1);\n    }\n\n    this.settings = this.getSettings();\n\n    this.zipService = new ZipService(this);\n    this.dependencies = new Dependencies(this);\n    this.layersService = new LayersService(this);\n    this.bucketService = new BucketService(this);\n    this.cloudFormationService = new CloudFormationService(this);\n\n    const localpackageJson = path.join(\n      process.cwd(),\n      this.settings.packagePath\n    );\n\n    try {\n      this.localPackage = require(localpackageJson);\n    } catch (e) {\n      this.log(`Error: Can not find ${localpackageJson}!`);\n      process.exit(1);\n    }\n\n    this.initialized = true;\n  }\n\n  getSettings() {\n    const inboundSettings = (this.serverless.service.custom || {})[\n      'serverless-layers'\n    ];\n    const defaultSettings = {\n      packageManager: 'npm',\n      compileDir: '.serverless',\n      packagePath: 'package.json',\n      compatibleRuntimes: ['nodejs'],\n      customInstallationCommand: null,\n      layersDeploymentBucket: this.service.provider.deploymentBucket\n    };\n    return {...defaultSettings, ...inboundSettings};\n  }\n\n  async main() {\n    const remotePackage = await this.bucketService.downloadPackageJson();\n\n    let isDifferent = true;\n\n    if (remotePackage) {\n      this.log('Comparing package.json dependencies...');\n      isDifferent = await this.isDiff(remotePackage.dependencies, this.localPackage.dependencies);\n    }\n\n    // merge package default options\n    this.mergePackageOptions();\n\n    const currentLayerARN = await this.getLayerArn();\n    if (!isDifferent && currentLayerARN) {\n      this.log(`Not has changed! Using same layer arn: ${currentLayerARN}`);\n      this.relateLayerWithFunctions(currentLayerARN);\n      return;\n    }\n\n    await this.dependencies.install();\n    await this.zipService.package();\n    await this.bucketService.uploadZipFile();\n    const version = await this.layersService.publishVersion();\n    await this.bucketService.uploadPackageJson();\n\n    this.relateLayerWithFunctions(version.LayerVersionArn);\n  }\n\n  getStackName() {\n    return this.provider.naming.getStackName();\n  }\n\n  getBucketName() {\n    if (!this.settings.layersDeploymentBucket) {\n      throw new Error(\n        'Please, you should specify \"deploymentBucket\" or \"layersDeploymentBucket\" option for this plugin!\\n'\n      );\n    }\n    return this.settings.layersDeploymentBucket;\n  }\n\n  getPathZipFileName() {\n    return `${path.join(process.cwd(), this.settings.compileDir, this.getStackName())}.zip`;\n  }\n\n  getBucketLayersPath() {\n    const serviceStage = `${this.serverless.service.service}/${this.options.stage}`;\n\n    let deploymentPrefix = 'serverless';\n    if (this.provider.getDeploymentPrefix) {\n      deploymentPrefix = this.provider.getDeploymentPrefix();\n    }\n\n    return path.join(\n      deploymentPrefix,\n      serviceStage,\n      'layers'\n    ).replace(/\\\\/g, '/');\n  }\n\n  async getLayerArn() {\n    if (this.cacheObject.LayerVersionArn) {\n      return this.cacheObject.LayerVersionArn;\n    }\n    const outputs = await this.cloudFormationService.getOutputs();\n    if (!outputs) return null;\n    const logicalId = this.getOutputLogicalId();\n    return (outputs.find(x => x.OutputKey === logicalId) || {}).OutputValue;\n  }\n\n  getOutputLogicalId() {\n    return this.provider.naming.getLambdaLayerOutputLogicalId(this.getStackName());\n  }\n\n  mergePackageOptions() {\n    const pkg = this.service.package;\n\n    const opts = {\n      individually: false,\n      excludeDevDependencies: false,\n      exclude: []\n    };\n\n    this.service.package = {...opts, ...pkg};\n\n    const hasRule = (this.service.package.exclude || '').indexOf('node_modules/**');\n\n    if (hasRule === -1) {\n      this.service.package.exclude.push('node_modules/**');\n    }\n  }\n\n  relateLayerWithFunctions(layerArn) {\n    this.log('Associating layers...');\n\n    const { functions } = this.service;\n\n    Object.keys(functions).forEach(funcName => {\n      functions[funcName].layers = functions[funcName].layers || [];\n      functions[funcName].layers.push(layerArn);\n      this.log(`function.${funcName} - ${layerArn}`);\n    });\n\n    this.service.resources = this.service.resources || {};\n    this.service.resources.Outputs = this.service.resources.Outputs || {};\n\n    const outputName = this.getOutputLogicalId();\n\n    Object.assign(this.service.resources.Outputs, {\n      [outputName]: {\n        Value: layerArn,\n        Export: {\n          Name: outputName\n        }\n      }\n    });\n  }\n\n  isDiff(depsA, depsB) {\n    if (!depsA) {\n      return true;\n    }\n\n    const depsKeyA = Object.keys(depsA);\n    const depsKeyB = Object.keys(depsB);\n    const isSizeEqual = depsKeyA.length === depsKeyB.length;\n\n    if (!isSizeEqual) return true;\n\n    let hasDifference = false;\n    Object.keys(depsA).forEach(dependence => {\n      if (depsA[dependence] !== depsB[dependence]) {\n        hasDifference = true;\n      }\n    });\n\n    return hasDifference;\n  }\n\n  getDependenciesList() {\n    return Object.keys((this.localPackage.dependencies||[])).map(x => (\n      `${x}@${this.localPackage.dependencies[x]}`\n    ));\n  }\n\n  async finalizeDeploy() {\n    const currentLayerARN = await this.getLayerArn();\n    Object.keys(this.service.functions).forEach(funcName => {\n      this.log(`function.${funcName} = layers.${currentLayerARN}`);\n    });\n  }\n\n  log(msg) {\n    this.serverless.cli.log(`[LayersPlugin]: ${msg}`);\n  }\n\n  cleanUpLayers() {\n    return this.layersService.cleanUpLayers();\n  }\n}\n\nmodule.exports = ServerlessLayers;\n"],"file":"index.js"}