{"version":3,"sources":["../../src/package/Dependencies.js"],"names":["fs","require","path","mkdirp","execSync","copyFile","AbstractService","Dependencies","commands","npm","yarn","nodeJsDir","join","process","cwd","plugin","settings","compileDir","cmd","console","log","env","toString","filename","init","existsSync","Promise","resolve","copyErr","sync","copyProjectFile","packagePath","packageManager","customInstallationCommand","run","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;eACqBA,OAAO,CAAC,eAAD,C;IAApBG,Q,YAAAA,Q;;AACR,IAAMC,QAAQ,GAAGJ,OAAO,CAAC,cAAD,CAAxB,C,CAA0C;;;AAE1C,IAAMK,eAAe,GAAGL,OAAO,CAAC,oBAAD,CAA/B;;IAEMM,Y;;;;;;;;;;;;2BACG;AACL,WAAKC,QAAL,GAAgB;AACdC,QAAAA,GAAG,EAAE,0BADS;AAEdC,QAAAA,IAAI,EAAE;AAFQ,OAAhB;AAIA,WAAKC,SAAL,GAAiBT,IAAI,CAACU,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,KAAKC,MAAL,CAAYC,QAAZ,CAAqBC,UAA9C,EAA0D,QAA1D,EAAoE,QAApE,CAAjB;AACD;;;wBAEGC,G,EAAK;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAQ,CAACc,GAAD,EAAM;AACxBJ,QAAAA,GAAG,EAAE,KAAKH,SADc;AAExBU,QAAAA,GAAG,EAAER,OAAO,CAACQ;AAFW,OAAN,CAAR,CAGTC,QAHS,EAAZ;AAID;;;oCAEeC,Q,EAAU;AAAA;;AACxB,WAAKC,IAAL;;AAEA,UAAI,CAACxB,EAAE,CAACyB,UAAH,CAAcF,QAAd,CAAL,EAA8B;AAC5B,aAAKR,MAAL,CAAYK,GAAZ,uBAA8BG,QAA9B;AACA,eAAO,IAAP;AACD;;AAED,aAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9BtB,QAAAA,QAAQ,CAACkB,QAAD,EAAWrB,IAAI,CAACU,IAAL,CAAU,KAAI,CAACD,SAAf,EAA0BY,QAA1B,CAAX,EAAgD,UAACK,OAAD,EAAa;AACnE,cAAIA,OAAJ,EAAa,MAAMA,OAAN;AACb,iBAAOD,OAAO,EAAd;AACD,SAHO,CAAR;AAID,OALM,CAAP;AAMD;;;;;;;;;;;AAGC,qBAAKH,IAAL;AACA,qBAAKT,MAAL,CAAYK,GAAZ,CAAgB,4CAAhB;;uBAEMjB,MAAM,CAAC0B,IAAP,CAAY,KAAKlB,SAAjB,C;;;;uBACA,KAAKmB,eAAL,CAAqB,KAAKf,MAAL,CAAYC,QAAZ,CAAqBe,WAA1C,C;;;sBAEF,KAAKhB,MAAL,CAAYC,QAAZ,CAAqBgB,cAArB,KAAwC,K;;;;;;uBACpC,KAAKF,eAAL,CAAqB,mBAArB,C;;;sBAGJ,KAAKf,MAAL,CAAYC,QAAZ,CAAqBgB,cAArB,KAAwC,M;;;;;;uBACpC,KAAKF,eAAL,CAAqB,WAArB,C;;;qBAIJ,KAAKf,MAAL,CAAYC,QAAZ,CAAqBiB,yB;;;;;iDAChB,KAAKC,GAAL,CAAS,KAAKnB,MAAL,CAAYC,QAAZ,CAAqBiB,yBAA9B,C;;;iDAIF,KAAKC,GAAL,CAAS,KAAK1B,QAAL,CAAc,KAAKO,MAAL,CAAYC,QAAZ,CAAqBgB,cAAnC,CAAT,C;;;;;;;;;;;;;;;;;;EArDgB1B,e;;AAyD3B6B,MAAM,CAACC,OAAP,GAAiB7B,YAAjB","sourcesContent":["const fs = require('fs');\nconst path = require('path');\nconst mkdirp = require('mkdirp');\nconst { execSync } = require('child_process');\nconst copyFile = require('fs-copy-file'); // node v6.10.3 support\n\nconst AbstractService = require('../AbstractService');\n\nclass Dependencies extends AbstractService {\n  init() {\n    this.commands = {\n      npm: 'npm install --production',\n      yarn: 'yarn --production'\n    };\n    this.nodeJsDir = path.join(process.cwd(), this.plugin.settings.compileDir, 'layers', 'nodejs');\n  }\n\n  run(cmd) {\n    console.log(execSync(cmd, {\n      cwd: this.nodeJsDir,\n      env: process.env\n    }).toString());\n  }\n\n  copyProjectFile(filename) {\n    this.init();\n\n    if (!fs.existsSync(filename)) {\n      this.plugin.log(`[warning] \"${filename}\" file does not exists!`);\n      return true;\n    }\n\n    return new Promise((resolve) => {\n      copyFile(filename, path.join(this.nodeJsDir, filename), (copyErr) => {\n        if (copyErr) throw copyErr;\n        return resolve();\n      });\n    });\n  }\n\n  async install() {\n    this.init();\n    this.plugin.log('Dependencies has changed! Re-installing...');\n\n    await mkdirp.sync(this.nodeJsDir);\n    await this.copyProjectFile(this.plugin.settings.packagePath);\n\n    if (this.plugin.settings.packageManager === 'npm') {\n      await this.copyProjectFile('package-lock.json');\n    }\n\n    if (this.plugin.settings.packageManager === 'yarn') {\n      await this.copyProjectFile('yarn.lock');\n    }\n\n    // custom commands\n    if (this.plugin.settings.customInstallationCommand) {\n      return this.run(this.plugin.settings.customInstallationCommand);\n    }\n\n    // packages installation\n    return this.run(this.commands[this.plugin.settings.packageManager]);\n  }\n}\n\nmodule.exports = Dependencies;\n"],"file":"Dependencies.js"}