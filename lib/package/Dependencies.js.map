{"version":3,"sources":["../../src/package/Dependencies.js"],"names":["path","require","mkdirp","install","copyFile","AbstractService","Dependencies","plugin","log","initialCwd","process","cwd","nodeJsDir","join","settings","compileDir","sync","Promise","resolve","packagePath","copyErr","chdir","opts","saveDev","cache","silent","getDependenciesList","installErr","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAME,QAAO,GAAGF,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,cAAD,CAAxB,C,CAA0C;;;AAE1C,IAAMI,eAAe,GAAGJ,OAAO,CAAC,oBAAD,CAA/B;;IAEMK,Y;;;;;;;;;;;;;;;;;;;;;;;AAEF,qBAAKC,MAAL,CAAYC,GAAZ,CAAgB,4CAAhB;AAEMC,gBAAAA,U,GAAaC,OAAO,CAACC,GAAR,E;AACbC,gBAAAA,S,GAAYZ,IAAI,CAACa,IAAL,CAAUH,OAAO,CAACC,GAAR,EAAV,EAAyB,KAAKJ,MAAL,CAAYO,QAAZ,CAAqBC,UAA9C,EAA0D,QAA1D,EAAoE,QAApE,C;;uBAEZb,MAAM,CAACc,IAAP,CAAYJ,SAAZ,C;;;iDAEC,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9Bd,kBAAAA,QAAQ,CAAC,KAAI,CAACG,MAAL,CAAYO,QAAZ,CAAqBK,WAAtB,EAAmCnB,IAAI,CAACa,IAAL,CAAUD,SAAV,EAAqB,cAArB,CAAnC,EAAyE,UAACQ,OAAD,EAAa;AAC5F,wBAAIA,OAAJ,EAAa,MAAMA,OAAN,CAD+E,CAG5F;;AACAV,oBAAAA,OAAO,CAACW,KAAR,CAAcT,SAAd;AAEA,wBAAMU,IAAI,GAAG;AAAEC,sBAAAA,OAAO,EAAE,KAAX;AAAkBC,sBAAAA,KAAK,EAAE,IAAzB;AAA+BC,sBAAAA,MAAM,EAAE;AAAvC,qBAAb;;AAEAtB,oBAAAA,QAAO,CAAC,KAAI,CAACI,MAAL,CAAYmB,mBAAZ,EAAD,EAAoCJ,IAApC,EAA0C,UAACK,UAAD,EAAgB;AAC/DjB,sBAAAA,OAAO,CAACW,KAAR,CAAcZ,UAAd;AACA,0BAAIkB,UAAJ,EAAgB,MAAMA,UAAN;AAChBT,sBAAAA,OAAO;AACR,qBAJM,CAAP;AAKD,mBAbO,CAAR;AAcD,iBAfM,C;;;;;;;;;;;;;;;;;;EATgBb,e;;AA4B3BuB,MAAM,CAACC,OAAP,GAAiBvB,YAAjB","sourcesContent":["const path = require('path');\nconst mkdirp = require('mkdirp');\nconst install = require('npm-install-package');\nconst copyFile = require('fs-copy-file'); // v6.10.3 support\n\nconst AbstractService = require('../AbstractService');\n\nclass Dependencies extends AbstractService {\n  async install() {\n    this.plugin.log('Dependencies has changed! Re-installing...');\n\n    const initialCwd = process.cwd();\n    const nodeJsDir = path.join(process.cwd(), this.plugin.settings.compileDir, 'layers', 'nodejs');\n\n    await mkdirp.sync(nodeJsDir);\n\n    return new Promise((resolve) => {\n      copyFile(this.plugin.settings.packagePath, path.join(nodeJsDir, 'package.json'), (copyErr) => {\n        if (copyErr) throw copyErr;\n\n        // install deps\n        process.chdir(nodeJsDir);\n\n        const opts = { saveDev: false, cache: true, silent: false };\n\n        install(this.plugin.getDependenciesList(), opts, (installErr) => {\n          process.chdir(initialCwd);\n          if (installErr) throw installErr;\n          resolve();\n        });\n      });\n    });\n  }\n}\n\nmodule.exports = Dependencies;\n"],"file":"Dependencies.js"}